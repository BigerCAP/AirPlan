<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AirPlan - A biger solution</title><link>https://ap.biger.cc/</link><description>Recent content on AirPlan - A biger solution</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>DB - AirPlan</copyright><lastBuildDate>Thu, 28 Sep 2023 00:00:00 +0800</lastBuildDate><atom:link href="https://ap.biger.cc/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>https://ap.biger.cc/about/</link><pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate><guid>https://ap.biger.cc/about/</guid><description>About | TiDB AirPlan 本站内容信仰：望闻问切之术 望而知之谓之神，闻而知之谓之圣 问而知之谓之工，切脉而知之谓之巧 缘由 域名：ap.tidb.cc 中的前缀 ap 为 air</description></item><item><title>Flink Connector 组件功能学习与测试</title><link>https://ap.biger.cc/post/20230928-flink-connector/</link><pubDate>Thu, 28 Sep 2023 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20230928-flink-connector/</guid><description>挑选安装版本跳过 下载 Flink 安装包 将 Flink Connector 放到 Flink/lib 目录中 配置 java 环境后，启动 Flink 单机服务 使用 Flink sql 链接该 Flink 服务，当客户端退出后任务失效 提交方式 任务执行方式 Flink</description></item><item><title>StarRocks BE 进程内存线程占用比例</title><link>https://ap.biger.cc/post/20230927-be_mem_tracker/</link><pubDate>Wed, 27 Sep 2023 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20230927-be_mem_tracker/</guid><description>通过访问 BeIP:8040/mem_tracker 获取当前 BE 进程内部各项内存项的瞬间使用。 大致如下图所示，以下各项工作可查看内存管理文档来了解各项指标的参数、百分比 或者通过以下方式</description></item><item><title>Docker - MySQL SSL &amp; Binlog</title><link>https://ap.biger.cc/post/20201123-49-docker-mysql-ssl-binlog/</link><pubDate>Mon, 23 Nov 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20201123-49-docker-mysql-ssl-binlog/</guid><description>0x00 init 测试要求：需要 MySQL 开启 SSL 与 ROW format Binlog 功能 0x01 Docker command // 忽略安装 docker-ce 步骤 搜索网络资料，使用以下命令方式启动：「Docker 指定 &amp;ndash;ssl=1 参数时，docker 内已</description></item><item><title>TiDB - PD Region Merge 食草兽</title><link>https://ap.biger.cc/post/202007017-29-region-merge/</link><pubDate>Fri, 17 Jul 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/202007017-29-region-merge/</guid><description>0x00 开始 Region Merge 是否要开启 观察 pd dashboard 中 region health 中 empty-region-count 信息； 如该数值大于 store * 100 ，建议开启 Region Merge 如该数值大于 store * 1000 ，建议调整 Region Merge 阈值「或者检查是否开启了 Region Mer</description></item><item><title>九死一生 - 运维小技巧</title><link>https://ap.biger.cc/post/20200703-27-tskill/</link><pubDate>Thu, 02 Jul 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20200703-27-tskill/</guid><description>0x00 陷入江局 回顾下前两篇文档 《纸上谈兵 - TiDB 性能调优》&amp;amp; 《沙盘点将 - TiDB 监控知识初始化》；处理问题的时候从总是一脸懵逼到偶尔无证懵逼；然后</description></item><item><title>TiDB - Backup/Restore 测试</title><link>https://ap.biger.cc/post/20200618-25-br-rc/</link><pubDate>Wed, 17 Jun 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20200618-25-br-rc/</guid><description>0x00 BR Backup &amp;amp; Restore（以下简称 BR）是 TiDB 分布式备份恢复的命令行工具，用于对 TiDB 集群进行数据备份和恢复。相比 mydumper/loader，B</description></item><item><title>软件测试 - S3 协议与 minio</title><link>https://ap.biger.cc/post/20200612-24-minio/</link><pubDate>Fri, 12 Jun 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20200612-24-minio/</guid><description>0x00 S3 S3（Amazon Simple Storage Service (Amazon S3)）着重于简易性和稳健性的最小功能集【具体信息跳转到 亚马逊 S3 技术介绍页面】： 创建存储桶 – 创建和命名存储数据</description></item><item><title>Product manager / 涉猎围观</title><link>https://ap.biger.cc/look/20200606-23-inspired/</link><pubDate>Sat, 06 Jun 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/look/20200606-23-inspired/</guid><description>0x00 inspired-启示录 douban link 产品是什么 产品经理职能定义 产品未来发展方向 平台打包 产品与用户之间的情感曲线 0x01 人人都是产品经理 douban link 0x02 交互式设计四</description></item><item><title>TiDB - CDC RC1 测试</title><link>https://ap.biger.cc/post/20200601-23-cdc-4.0rc1/</link><pubDate>Mon, 01 Jun 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20200601-23-cdc-4.0rc1/</guid><description>0x00 CDC 嗯，同场竞技 Binlog 与 CDC 组件 本页内容仅针对 v4.0.0-rc.1-25 版本，不对后续版本做任何预测性的评论 // 最终解释权归制图者 参考各种文档 官网文档 安装部署 Github Repo TiCDC Improve usability in cdc</description></item><item><title>TiDB - 4.0 版图分析</title><link>https://ap.biger.cc/post/20200529-22-tidb-4.0/</link><pubDate>Fri, 29 May 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20200529-22-tidb-4.0/</guid><description>0x00 History TiDB 1.0 2017 年 10 月 16 日 TiDB 2.0 2018 年 4 月 27 日 TiDB 2.1 2018 年 11 月 30 日 TiDB 3.0 2019 年 6 月 28 日 TiDB 3.1 2020 年 4 月 16 日 TiDB 4.0 2020 年 5 月 28 日 0x01 4.0 没有故事可讲，看图吧 根据上一篇文档 TiDB</description></item><item><title>TiDB 4.0 -- keyvis-diagnostics</title><link>https://ap.biger.cc/post/20200521-21-keyvis/</link><pubDate>Thu, 21 May 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20200521-21-keyvis/</guid><description>0x00 KeyVis 不介绍这个功能来历了，贴点资料大家看下开心阅读 Cloud Bigtable【官方提供多国语言】 Key Visualizer 概览 Key Visualizer 使用入门 Key Visualizer 探索热图 Key Visualizer 热图模式 Key Visualizer 指标</description></item><item><title>监控组件 - Provisioning Grafana</title><link>https://ap.biger.cc/post/20200513-20-provisioning-grafana/</link><pubDate>Wed, 13 May 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20200513-20-provisioning-grafana/</guid><description>0x00 话不多说 Grafana 用于 TiDB-cluster 集群监控展示功能（如果不了解的同学可以看下以前的文档），如果每套集群都部署一个 Grafana，使用不方便且运维也繁琐。因此</description></item><item><title>Raft 多数派选举策略</title><link>https://ap.biger.cc/look/20200509-19-raft/</link><pubDate>Sat, 09 May 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/look/20200509-19-raft/</guid><description>0x00 Look 全文复制 青蛙小白 - Raft Raft 多数派选举策略 分布式一致性协议允许一组服务器节点像一个整体一样工作，允许其中一些节点出现故障也能继续工作下去。正式</description></item><item><title>TPC-C 相关内容</title><link>https://ap.biger.cc/look/20200525-22-tpcc/</link><pubDate>Sat, 09 May 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/look/20200525-22-tpcc/</guid><description>0x00 TPC-C 是 TPC(Transaction Processing Performance Council) 组织发布的一个测试规范，用于模拟测试复杂的在线事务处理系统。其测试结果包括每分钟事务数 (tpmC)，以及每事务的成本 (Pric</description></item><item><title>TiDB 4.0 新特性</title><link>https://ap.biger.cc/post/20200504-19-tidb4.0/</link><pubDate>Mon, 04 May 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20200504-19-tidb4.0/</guid><description>0x00 Live 最近几周 TiDB 官方搞了好多次直播，一直在宣传 TiDB 4.0 版本的新特性，本文汇总下 4.0 特色功能；数据来源于 TiDB bilibili 直播、官网文档、用户微信群、公众号等几个地</description></item><item><title>沙盘点将 - TiDB 监控知识初始化</title><link>https://ap.biger.cc/post/20200416-16-init-monitoring-map/</link><pubDate>Thu, 16 Apr 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20200416-16-init-monitoring-map/</guid><description>0x00 点点滴滴 之前有篇文档是 纸上谈兵 - TiDB 性能调优，仅仅这篇文档无法承载想表达的豪言壮语，因此出现了一话三联内容，分别是 纸上谈兵（性能调优逻辑、S</description></item><item><title>K8S 安装记录 - PV &amp; PVC</title><link>https://ap.biger.cc/post/20200408-15-k8s-pv/</link><pubDate>Wed, 08 Apr 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20200408-15-k8s-pv/</guid><description>0x00 书接上回 友情提示：这是一篇非常水的文档，因为对 PV/PVC 理解层次太低；后续继续学习然后会重构文档内容 # 20200410 安装完 K8S 需要验证下 K8S 整体可用程度，在测试 POD</description></item><item><title>K8S 安装记录 - 真神了</title><link>https://ap.biger.cc/post/20200403-14-k8s-install/</link><pubDate>Fri, 03 Apr 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20200403-14-k8s-install/</guid><description>0x00 缘起 无它，就是学习学习，然后装逼用 0x01 准备 K8S 有一些要求限制，不按照处理是无法启动滴 以下内容随手复制的，非原创 关闭 swap 1 2 3 4 5 6 7 8 9 10 11 12 sed</description></item><item><title>使用软件时强制升级的设计</title><link>https://ap.biger.cc/post/20200323-13-teamview/</link><pubDate>Mon, 23 Mar 2020 12:40:52 +0000</pubDate><guid>https://ap.biger.cc/post/20200323-13-teamview/</guid><description>0x00 看到 工作需要经常用到 teamviewer 远程桌面工具处理问题，曾也用过向日葵、QQ 远程等类似工具，但都不如该工具的流畅性和稳定性。 最近两年使用该工具有两个不</description></item><item><title>Linux - 可大可小的 LVM</title><link>https://ap.biger.cc/post/20200321-12-lvm/</link><pubDate>Sat, 21 Mar 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20200321-12-lvm/</guid><description>0x00 理由 接触了个客户环境，物理机磁盘使用的 LVM 方式划分。0202 年了还有公司大量使用该方式规划存储，被迫只能拿起来再复习下这项技术的使用姿势、追</description></item><item><title>纸上谈兵 - TiDB 性能调优</title><link>https://ap.biger.cc/post/20200311-11-performance-map/</link><pubDate>Wed, 11 Mar 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20200311-11-performance-map/</guid><description>0x00 缘 妙不可言 开局一张图，其他全靠编。本文内容中 performance map 基于 TiDB 2.1 &amp;amp; TiDB 3.0 构建；部分内容与新版本不适配，具体以官方解释为准（e.g: TiDB 4.0 Titan engine 读写与本文</description></item><item><title>生态围墙 - Github Actions &amp; Hugo</title><link>https://ap.biger.cc/post/20200108-2-github-hugo-actions/</link><pubDate>Wed, 08 Jan 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20200108-2-github-hugo-actions/</guid><description>0x00 上帝说有光 目标：持续 tidb.cc 域名的运转 初衷：让更多的人了解 xxxx 产品 内核：提升自身技能以及建立良性记录 动力：装逼 助力 OKR、分享与讨论技术的真实性、</description></item><item><title>TiDB &amp; Haproxy / show processlist View real IP</title><link>https://ap.biger.cc/post/20200102-1-tidb-haproxy-real-ip/</link><pubDate>Thu, 02 Jan 2020 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20200102-1-tidb-haproxy-real-ip/</guid><description>0x00 - 背景 高可用性（英语：high availability，缩写为 HA）测试 failpoint 场景，需要在服务前面添加 load balance 组件；比如 F5、LVS、Haprox</description></item><item><title>总结 - Data Migration（数据同步）</title><link>https://ap.biger.cc/post/20191008-41-dm-faq/</link><pubDate>Tue, 08 Oct 2019 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20191008-41-dm-faq/</guid><description>0x00 开局 本文仅记录了对 DM 的学习，处理问题经验慢慢补充（没有素材编场景） 版本使用从 RC 到 v1.0.3 ；架构整体变化不大，有着上纲上线的框架守护 本页内容没有干</description></item><item><title>TiDB - 2PC &amp; Backoff</title><link>https://ap.biger.cc/post/20190606-23-backoff/</link><pubDate>Wed, 05 Jun 2019 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20190606-23-backoff/</guid><description>0x00 源 TiDB to TiKV 之间的网络状态(图片来自与 PingCAP 官网锁冲突)「该图包含悲观锁逻辑，来自 2020 年的 PingCAP 官网」；部分内容来自 Google Percolator 的事务模型。 0x01 2PC 2PC (Two-phaseCommit) 是指在计算机</description></item><item><title>系统调优 - numactl cpubind</title><link>https://ap.biger.cc/post/20190313-11-numactl/</link><pubDate>Wed, 13 Mar 2019 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20190313-11-numactl/</guid><description>0x00 CCC 单个不够，数量来凑，太多人跑也会不规划好跑道容易干架；使用 Linux 软件 numactl 将服务进程绑定在目标 CPU 上，支持按 Vcore、物理 CPU 绑定。 0x01 numactl numactl &amp;ndash;show 查看当</description></item><item><title>入库检查 - 物理机 &amp; 系统安装数据库前预检查</title><link>https://ap.biger.cc/post/20190306-10-precheck/</link><pubDate>Wed, 06 Mar 2019 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20190306-10-precheck/</guid><description>0x01 precheck 本篇文档产生原因来自 Step 7: Configure the CPUfreq governor mode on the target machine 根据 TiDB-ansible 安装时的报错反推物理机安装 TiDB 时需要干点啥…… 0x02 OS 结合官方文档 使用 TiDB Ansible 部署 TiDB 集群 文档先整理</description></item><item><title>序列化事物 ID 策略 - TSO</title><link>https://ap.biger.cc/post/20190201-5-pd-tso/</link><pubDate>Fri, 01 Feb 2019 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20190201-5-pd-tso/</guid><description>0x00 院子 MySQL 有个东东的叫 GTID（GTID = server_uuid:transaction_id）；它在 Binlog 文件中大概长这样【3E11FA55-7</description></item><item><title>School - TiKV not leader</title><link>https://ap.biger.cc/post/20181126-48-not-leader/</link><pubDate>Mon, 26 Nov 2018 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20181126-48-not-leader/</guid><description>0x00 监控 使用云机房物理机设备组建同城三中心方式部署 部署时已知 idc3 与其他两个机房 ping latency 稍高，大约在 1 - 3 ms 之间，idc1 与 idc2 机房延迟稳定在 1ms 以内 0x01 架</description></item><item><title>School - Binlog &amp; TSO</title><link>https://ap.biger.cc/post/20181029-44-binlog-tso/</link><pubDate>Mon, 29 Oct 2018 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20181029-44-binlog-tso/</guid><description>0x00 事前 维护该 Binlog 架构下的问题之一 “GC 数据问题” 0x01 FAQ-1 某天巡检发现以下现象，pump 还在工作、Drainer 写入出现中断 查看 Drainer 日志 1 2 3 4 5 6 pump.go:433:</description></item><item><title>School - TiDB Region Spilt</title><link>https://ap.biger.cc/post/20180824-34-region-spilt/</link><pubDate>Fri, 24 Aug 2018 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20180824-34-region-spilt/</guid><description>0x00 元 收到监控 &amp;amp; 业务告警，内容为目前 QPS duration &amp;gt; 1s 首先排查监控缩小范围 交叉信息判定为 region 超过 144mb 以后未分裂，造成 get snapshot 持续失败，同时 region 过大造成写入和读取数</description></item><item><title>School - TiDB table info &amp; DDL history</title><link>https://ap.biger.cc/post/20190116-3-ddl-history/</link><pubDate>Fri, 24 Aug 2018 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20190116-3-ddl-history/</guid><description>0x00 元 tidb ddl 3.0 版本之前只有一个队列提供服务，所有 ddl 都要在这个队列阻塞 多个 TiDB-server 会先选举 DDL owner TiDB 配置文件中的 run-ddl = false 该节点不支持运行 DDL DDL owner 处理所有 DDL 信息 更</description></item><item><title>School - TiKV write stall</title><link>https://ap.biger.cc/post/20180807-32-write-stall/</link><pubDate>Tue, 07 Aug 2018 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20180807-32-write-stall/</guid><description>0x00 告警 TiDB 与 TiKV 出现大量 backoff；触发 backoff 告警阈值 相应时间段 tidb kv error 监控趋势升高 相应时间段 tikv thread cpu / apply cpu 监控趋势升高 1 2 3 4 5 6 7 8 9 10 11 12 13 14</description></item><item><title>School - TiDB 根据 PK 查询不到数据</title><link>https://ap.biger.cc/post/20180803-31-select-hash/</link><pubDate>Fri, 03 Aug 2018 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20180803-31-select-hash/</guid><description>0x00 复古文档 根据 PK 查询不不到数据、根据其他索引字段可以查询到数据、根据 count 确认不同字段下数据量一致； 0x01 过程 先行随机校验数据 1 2 3 4 5 6 7 8 9 10 11</description></item><item><title>总结 - Syncer 助力思维成长</title><link>https://ap.biger.cc/post/20180605-syncer-mindmap/</link><pubDate>Tue, 05 Jun 2018 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20180605-syncer-mindmap/</guid><description>0x00 背景 长期使用 Syncer 之后经过一番胡思乱想之后的总结经验，类似于“久病成医”的感觉 内容按照 201706 - 201806 期间使用经验整理，后续大致是不会遇见了，因为有了新</description></item><item><title>Drainer &amp; Binlog crc mismatch</title><link>https://ap.biger.cc/post/20180512-drainer-crc/</link><pubDate>Sat, 12 May 2018 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20180512-drainer-crc/</guid><description>0x00 借口 该问题出现时间为 2018 年 5 月 12 日，影响版本范围在 1.0.x &amp;amp; 2.0 附近；基本上算运维事故，一定要配置告警啊，就算系统不重要 现象总结 出现 crc mismatch 可能是 pump binlog 数</description></item><item><title>TiKV 磁盘空间回收步骤记录</title><link>https://ap.biger.cc/post/20180503-disk-space-recovery/</link><pubDate>Thu, 03 May 2018 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20180503-disk-space-recovery/</guid><description>0x00 前景介绍 该版本文档内容适用于 TiKV 3.0 之前版本；不包含使用 TiKV Titan engine 架构的内容 TiKV 节点磁盘占用主要为以下三个目录 {{deploy_dir}}/log TiKV 日志目录，目前日志 GC 需要单独脚本操</description></item><item><title>AP - TiSpark 服务安装 部署 测试</title><link>https://ap.biger.cc/post/20180416-tispark-deploy/</link><pubDate>Mon, 16 Apr 2018 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20180416-tispark-deploy/</guid><description>0x00 介绍 TiSpark 项目 2020 年会被姊妹家 TiFlash 升级替换 pingcap/TiSpark 项目地址，使用前阅读以下文档 TiSpark 用户指南（英文版本） 官方 Blog TiSpark 文档 0x01 部署 TiSpark 前情提要 tidb-ansible/roles/local/templates/binary_packages.yml.j2 下载连接 此处为 tispark 下载连</description></item><item><title>测试域名代替 IP 部署 TiDB</title><link>https://ap.biger.cc/post/20180406-tidb-domain/</link><pubDate>Fri, 06 Apr 2018 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20180406-tidb-domain/</guid><description>0x00 假设 新建机房网络频繁变更或公司内部要求禁止使用 IP 做为服务启动监听（大公司规划时喜欢使用 hostname/server name + domain 做为服务监听信息，配合公司内网 DNS 做跨地域运维</description></item><item><title>测试在线修改 TiDB Cluster 组件 IP 地址</title><link>https://ap.biger.cc/post/20180327-change-tidb-ip/</link><pubDate>Tue, 27 Mar 2018 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20180327-change-tidb-ip/</guid><description>0x00 背景 物理网络在实际生产环境会存在 vlan、IP 集群部署可能横跨多台机器甚至横跨机房，在有离线或在线业务情况下应该怎么操作变更 IP 地址信息，配</description></item><item><title>Linux - Systemd &amp; Syncer 相爱相杀</title><link>https://ap.biger.cc/post/20180323-systemd-syncer/</link><pubDate>Fri, 23 Mar 2018 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20180323-systemd-syncer/</guid><description>0x00 缘来 Syncer 数据同步，会因为网络延迟与网络丢包、上下游压力过大等原因导致断开，这些场景本身是可重启恢复的。 最初与 TiDB 使用的 supervise 小工具，这个工具有个问</description></item><item><title>Linux - OOM > out of memory</title><link>https://ap.biger.cc/post/20171119-46-linux-oom-killer/</link><pubDate>Sun, 19 Nov 2017 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20171119-46-linux-oom-killer/</guid><description>0x00 开头 测试机器环境配置比较低，使用 TiDB Join 表连接查询时偶尔会出现重启现象，按照官方指导查看问题原因说时 TiDB-server OOM 了，那么 OOM 是什么呢？为什么 OOM 啊？怎么才</description></item><item><title>TiDB - Binlog 数据同步架构测试</title><link>https://ap.biger.cc/post/20171108-40-testing-binlog/</link><pubDate>Sun, 08 Oct 2017 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20171108-40-testing-binlog/</guid><description>0x00 测试 前段时间部署了一套 TiDB 数据库，只有单纯的数据库放养是肯定不行的。还要一些灾备方案满足删库跑路之后的恢复工作。 按照以往（mysql）经验有</description></item><item><title>TiDB-AirPlan</title><link>https://ap.biger.cc/airplan/</link><pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate><guid>https://ap.biger.cc/airplan/</guid><description>0x00 闲来无聊 闲来无聊干点啥，买了几个域名（如有雷同 纯属巧合），比如本站的 tidb.cc TiDB-AirPlan 站名来自于某项运动的战术代号，Airplan（空中加油：先让一部分</description></item><item><title>Linux - Transfer.sh 一键文件服务器</title><link>https://ap.biger.cc/post/20170809-transfer.sh/</link><pubDate>Wed, 09 Aug 2017 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20170809-transfer.sh/</guid><description>0x00 起源 平常需要各种传输日志文件，TiDB 部署进程比较多，打包后可能超过 100MB（微信最大支持 100MB 附件传输），发送人和接受人不是同平台时，文件</description></item><item><title>负载均衡 - HAProxy &amp; TiDB 配合食用</title><link>https://ap.biger.cc/post/20170610-haproxy/</link><pubDate>Sat, 10 Jun 2017 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20170610-haproxy/</guid><description>0x01 介绍 Haproxy 官网 百家饭内容，将测试环境的最终结果整理了下 0x02 功能 负载均衡：L4(TCP) 和 L7(HTTP/HTTPS) 两种模式，支持 RR(roundrobin) / 静态 RR / LC / IP Hash/ URI Hash/ URL_PARAM Hash/ HTTP_HEADER Hash 等丰富的</description></item><item><title>监控架构 - TIDB 监控运维 FAQ</title><link>https://ap.biger.cc/post/20170607-prometheus-faq/</link><pubDate>Wed, 07 Jun 2017 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20170607-prometheus-faq/</guid><description>0x00 唠叨 遇见了、记下了，后面或许会遇见；经历过的事件只记下了标签、这里或许是个解答题 部分问题会因使用版本或场景解决方案不一，仅供参考 如有雷同 纯</description></item><item><title>监控架构 - 那些年我们举报的神马</title><link>https://ap.biger.cc/post/20170605-alertmanager-rules/</link><pubDate>Mon, 05 Jun 2017 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20170605-alertmanager-rules/</guid><description>创业 先帝创业未半而中道崩殂，今三分天下…… 因为没有及时收到告警导致整体垮掉而被领导责罚就是这个样子啦，所以小兵挂掉需要及时获知消息用于及时作</description></item><item><title>监控架构 - 专业打小报告好多年</title><link>https://ap.biger.cc/post/20170604-alertmanager/</link><pubDate>Sun, 04 Jun 2017 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20170604-alertmanager/</guid><description>骑士 AlertManager 配置以及工具使用说明 AlertManager 配置文件模板 交叉 在 Prometheus 配置文件更新以下代码块(prometheus 2.0 +)，修改完成后重启后生效 Prometheus 配置文件地址 {{deploy_dir}}/conf/prometheus.yml 1 2</description></item><item><title>监控架构 - Blackbox_exporter 主动探测端口服务状态</title><link>https://ap.biger.cc/post/20170603-blackbox_exporter/</link><pubDate>Sat, 03 Jun 2017 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20170603-blackbox_exporter/</guid><description>0x00 找个能监控组件端口是否存在的服务，并且可以将数据发送到 Prometheus ；blackbox export 是 Prometheus 家族一员，按照配置文件内容用于向目标主动探测 0x01 Deploy blackbox_exporter 是 Prometheus 官方</description></item><item><title>监控架构 - Node_exporter 系统监控组件</title><link>https://ap.biger.cc/post/20170602-node_exporter/</link><pubDate>Fri, 02 Jun 2017 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20170602-node_exporter/</guid><description>0x00 起源 学习 node export 存的 0x01 Collector 通过 http://IP:9100/metrics 查看当前主机监控信息 Node export 通过Collector代码块收集系统性能指标 以下内容引用 Prometeus/Node_export README 每个操作系统上的 Collectors 都有不同的</description></item><item><title>TiDB 监控架构：Prometheus + Grafana</title><link>https://ap.biger.cc/post/20170601-prometheus-grafana/</link><pubDate>Thu, 01 Jun 2017 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20170601-prometheus-grafana/</guid><description>0x00 背影 通过本篇文档学习 TiDB 集群监控架构 (默认按照 TiDB-ansible 部署为准) 本篇文档按照 2019 年中 TiDB-ansible master branch 描述；区别在于是否有 pushgateway 组件 (端口 9091) 以下文档（百家饭+机器译</description></item><item><title>是软体啦 - 思维导图三体之 xmind</title><link>https://ap.biger.cc/post/20100101-mindmap-xmind/</link><pubDate>Fri, 01 Jan 2010 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20100101-mindmap-xmind/</guid><description>0x00 云 业界大佬介绍一款高大上工具用于学习新的知识点 - mindmap / 思维导图。连续在各种场景用了几年，所以聊聊这玩意的看法（仅供参考） 这玩意当初查百度百科</description></item><item><title>Linux - Megacli 软件配置硬 RAID</title><link>https://ap.biger.cc/post/20090103-megacli/</link><pubDate>Sat, 03 Jan 2009 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20090103-megacli/</guid><description>0x00 启示 服务器在远程机房托管，如果更改 raid level 需要通知机房运维人员下工单重做，时间周期不确定；听朋友介绍了该软件，通过软件对 LSI Raid 卡重新配置 Raid</description></item><item><title>Linux - Tmux 多窗口敏捷工具</title><link>https://ap.biger.cc/post/20090102-tmux/</link><pubDate>Fri, 02 Jan 2009 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20090102-tmux/</guid><description>0x00 起源 screen 热键激活用的 ctrl + a，该热键同时是跳转到行首的快捷键； 试图寻找第二款类似 screen 的工具；找到了 tmux 这种 linux 平台办公利器，尤其是在没有扩展屏情况下</description></item><item><title>Linux - Screen 进程守护</title><link>https://ap.biger.cc/post/20090101-screen/</link><pubDate>Thu, 01 Jan 2009 00:00:00 +0800</pubDate><guid>https://ap.biger.cc/post/20090101-screen/</guid><description>0x00 起源 百家饭内容：常用参数速查 主要用于 Linux 运行常驻命令守护，screen 创建窗口后运行程序，相比 nohub 命令使用上心安理得一些。 如果作为办公多窗口使</description></item></channel></rss>