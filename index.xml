<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TiDB AirPlan - A biger solution</title>
    <link>https://ap.tidb.cc/</link>
    <description>Recent content on TiDB AirPlan - A biger solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>TiDB - AirPlan</copyright>
    <lastBuildDate>Wed, 08 Apr 2020 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://ap.tidb.cc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>https://ap.tidb.cc/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/about/</guid>
      <description>About | TiDB AirPlan 本站内容信仰：望闻问切之术 望而知之谓之神，闻而知之谓之圣 问而知之谓之工，切脉而知之谓之巧 缘由 域名：ap.tidb.cc 中的前缀 ap 为 air</description>
    </item>
    
    <item>
      <title>K8S 安装记录 - PV &amp; PVC</title>
      <link>https://ap.tidb.cc/post/20200408-15-k8s-pv/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20200408-15-k8s-pv/</guid>
      <description>0x00 书接上回 友情提示：这是一篇非常水的文档，因为对 PV/PVC 理解层次太低；后续继续学习然后会重构文档内容 # 20200410 安装完 K8S 需要验证下 K8S 整体可用程度，在测试 POD</description>
    </item>
    
    <item>
      <title>K8S 安装记录 - 真神了</title>
      <link>https://ap.tidb.cc/post/20200403-14-k8s-install/</link>
      <pubDate>Fri, 03 Apr 2020 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20200403-14-k8s-install/</guid>
      <description>0x00 缘起 无它，就是学习学习，然后装逼用 0x01 准备 K8S 有一些要求限制，不按照处理是无法启动滴 以下内容随手复制的，非原创 关闭 swap 1 2 3 4 5 6 7 8 9 sed -i 7,9s/0/1/g /usr/lib/sysctl.d/00-system.conf</description>
    </item>
    
    <item>
      <title>使用软件时强制升级的设计</title>
      <link>https://ap.tidb.cc/post/20200323-13-teamview/</link>
      <pubDate>Mon, 23 Mar 2020 12:40:52 +0000</pubDate>
      
      <guid>https://ap.tidb.cc/post/20200323-13-teamview/</guid>
      <description>0x00 看到 工作需要经常用到 teamviewer 远程桌面工具处理问题，曾也用过向日葵、QQ 远程等类似工具，但都不如该工具的流畅性和稳定性。 最近两年使用该工具有两个不</description>
    </item>
    
    <item>
      <title>Linux - 可大可小的 LVM</title>
      <link>https://ap.tidb.cc/post/20200321-12-lvm/</link>
      <pubDate>Sat, 21 Mar 2020 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20200321-12-lvm/</guid>
      <description>0x00 理由 接触了个客户环境，物理机磁盘使用的 LVM 方式划分。0202 年了还有公司大量使用该方式规划存储，被迫只能拿起来再复习下这项技术的使用姿势、追</description>
    </item>
    
    <item>
      <title>纸上谈兵 - TiDB 性能调优</title>
      <link>https://ap.tidb.cc/post/20200311-11-performance-map/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20200311-11-performance-map/</guid>
      <description>0x00 缘 妙不可言 开局一张图，其他全靠编。本文内容中 performance map 基于 TiDB 2.1 &amp;amp; TiDB 3.0 构建；部分内容与新版本不适配，具体以官方解释为准（e.g: TiDB 4.0 Titan engine 读写与本文</description>
    </item>
    
    <item>
      <title>生态围墙 - Github Actions &amp; Hugo</title>
      <link>https://ap.tidb.cc/post/20200108-2-github-hugo-actions/</link>
      <pubDate>Wed, 08 Jan 2020 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20200108-2-github-hugo-actions/</guid>
      <description>0x00 上帝说有光 目标：持续 tidb.cc 域名的运转 初衷：让更多的人了解 xxxx 产品 内核：提升自身技能以及建立良性记录 动力：装逼 助力 OKR、分享与讨论技术的真实性、</description>
    </item>
    
    <item>
      <title>TiDB &amp; Haproxy / show processlist View real IP</title>
      <link>https://ap.tidb.cc/post/20200102-1-tidb-haproxy-real-ip/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20200102-1-tidb-haproxy-real-ip/</guid>
      <description>0x00 - 背景 高可用性（英语：high availability，缩写为 HA）测试 failpoint 场景，需要在服务前面添加 load balance 组件；比如 F5、LVS、Haprox</description>
    </item>
    
    <item>
      <title>总结 - Data Migration（数据同步）</title>
      <link>https://ap.tidb.cc/post/20191008-41-dm-faq/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20191008-41-dm-faq/</guid>
      <description>0x00 开局 本文仅记录了对 DM 的学习，处理问题经验慢慢补充（没有素材编场景） 版本使用从 RC 到 v1.0.3 ；架构整体变化不大，有着上纲上线的框架守护 本页内容没有干</description>
    </item>
    
    <item>
      <title>总结 - Syncer 助力思维成长</title>
      <link>https://ap.tidb.cc/post/20180605-syncer-mindmap/</link>
      <pubDate>Tue, 05 Jun 2018 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20180605-syncer-mindmap/</guid>
      <description>0x00 背景 长期使用 Syncer 之后经过一番胡思乱想之后的总结经验，类似于“久病成医”的感觉 内容按照 201706 - 201806 期间使用经验整理，后续大致是不会遇见了，因为有了新</description>
    </item>
    
    <item>
      <title>Drainer &amp; Binlog crc mismatch</title>
      <link>https://ap.tidb.cc/post/20180512-drainer-crc/</link>
      <pubDate>Sat, 12 May 2018 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20180512-drainer-crc/</guid>
      <description>0x00 借口 该问题出现时间为 2018 年 5 月 12 日，影响版本范围在 1.0.x &amp;amp; 2.0 附近；基本上算运维事故，一定要配置告警啊，就算系统不重要 现象总结 出现 crc mismatch 可能是 pump binlog 数</description>
    </item>
    
    <item>
      <title>TiKV 磁盘空间回收步骤记录</title>
      <link>https://ap.tidb.cc/post/20180503-disk-space-recovery/</link>
      <pubDate>Thu, 03 May 2018 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20180503-disk-space-recovery/</guid>
      <description>0x00 前景介绍 该版本文档内容适用于 TiKV 3.0 之前版本；不包含使用 TiKV Titan engine 架构的内容 TiKV 节点磁盘占用主要为以下三个目录 {{deploy_dir}}/log TiKV 日志目录，目前日志 GC 需要单独脚本操</description>
    </item>
    
    <item>
      <title>AP - TiSpark 服务安装 部署 测试</title>
      <link>https://ap.tidb.cc/post/20180416-tispark-deploy/</link>
      <pubDate>Mon, 16 Apr 2018 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20180416-tispark-deploy/</guid>
      <description>0x00 介绍 TiSpark 项目 2020 年会被姊妹家 TiFlash 升级替换 pingcap/TiSpark 项目地址，使用前阅读以下文档 TiSpark 用户指南（英文版本） 官方 Blog TiSpark 文档 0x01 部署 TiSpark 前情提要 tidb-ansible/roles/local/templates/binary_packages.yml.j2 下载连接 此处为 tispark 下载连</description>
    </item>
    
    <item>
      <title>测试域名代替 IP 部署 TiDB</title>
      <link>https://ap.tidb.cc/post/20180406-tidb-domain/</link>
      <pubDate>Fri, 06 Apr 2018 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20180406-tidb-domain/</guid>
      <description>0x00 假设 新建机房网络频繁变更或公司内部要求禁止使用 IP 做为服务启动监听（大公司规划时喜欢使用 hostname/server name + domain 做为服务监听信息，配合公司内网 DNS 做跨地域运维</description>
    </item>
    
    <item>
      <title>测试在线修改 TiDB Cluster 组件 IP 地址</title>
      <link>https://ap.tidb.cc/post/20180327-change-tidb-ip/</link>
      <pubDate>Tue, 27 Mar 2018 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20180327-change-tidb-ip/</guid>
      <description>0x00 背景 物理网络在实际生产环境会存在 vlan、IP 集群部署可能横跨多台机器甚至横跨机房，在有离线或在线业务情况下应该怎么操作变更 IP 地址信息，配</description>
    </item>
    
    <item>
      <title>Linux - Systemd &amp; Syncer 相爱相杀</title>
      <link>https://ap.tidb.cc/post/20180323-systemd-syncer/</link>
      <pubDate>Fri, 23 Mar 2018 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20180323-systemd-syncer/</guid>
      <description>0x00 缘来 Syncer 数据同步，会因为网络延迟与网络丢包、上下游压力过大等原因导致断开，这些场景本身是可重启恢复的。 最初与 TiDB 使用的 supervise 小工具，这个工具有个问</description>
    </item>
    
    <item>
      <title>Linux - OOM &gt; out of memory</title>
      <link>https://ap.tidb.cc/post/20171119-46-linux-oom-killer/</link>
      <pubDate>Sun, 19 Nov 2017 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20171119-46-linux-oom-killer/</guid>
      <description>0x00 开头 测试机器环境配置比较低，使用 TiDB Join 表连接查询时偶尔会出现重启现象，按照官方指导查看问题原因说时 TiDB-server OOM 了，那么 OOM 是什么呢？为什么 OOM 啊？怎么才</description>
    </item>
    
    <item>
      <title>TiDB - Binlog 数据同步架构测试</title>
      <link>https://ap.tidb.cc/post/201711008-40-testing-binlog/</link>
      <pubDate>Sun, 08 Oct 2017 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/201711008-40-testing-binlog/</guid>
      <description>0x00 测试 前段时间部署了一套 TiDB 数据库，只有单纯的数据库放养是肯定不行的。还要一些灾备方案满足删库跑路之后的恢复工作。 按照以往（mysql）经验有</description>
    </item>
    
    <item>
      <title>TiDB-AirPlan</title>
      <link>https://ap.tidb.cc/airplan/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/airplan/</guid>
      <description>0x00 闲来无聊 闲来无聊干点啥，买了几个域名（如有雷同 纯属巧合），比如本站的 tidb.cc TiDB-AirPlan 站名来自于某项运动的战术代号，Airplan（空中加油：先让一部分</description>
    </item>
    
    <item>
      <title>Linux - Transfer.sh 一键文件服务器</title>
      <link>https://ap.tidb.cc/post/20170809-transfer.sh/</link>
      <pubDate>Wed, 09 Aug 2017 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20170809-transfer.sh/</guid>
      <description>0x00 起源 平常需要各种传输日志文件，TiDB 部署进程比较多，打包后可能超过 100MB（微信最大支持 100MB 附件传输），发送人和接受人不是同平台时，文件</description>
    </item>
    
    <item>
      <title>负载均衡 - HAProxy &amp; TiDB 配合食用</title>
      <link>https://ap.tidb.cc/post/20170610-haproxy/</link>
      <pubDate>Sat, 10 Jun 2017 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20170610-haproxy/</guid>
      <description>0x01 介绍 官网 百家饭内容，将测试环境的最终结果整理了下 0x02 功能 负载均衡：L4(TCP) 和 L7(HTTP/HTTPS) 两种模式，支持 RR(roundrobin) / 静态 RR / LC / IP Hash/ URI Hash/ URL_PARAM Hash/ HTTP_HEADER Hash 等丰富的负</description>
    </item>
    
    <item>
      <title>监控架构 - TIDB 监控运维 FAQ</title>
      <link>https://ap.tidb.cc/post/20170607-prometheus-faq/</link>
      <pubDate>Wed, 07 Jun 2017 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20170607-prometheus-faq/</guid>
      <description>0x00 唠叨 遇见了、记下了，后面或许会遇见；经历过的事件只记下了标签、这里或许是个解答题 部分问题会因使用版本或场景解决方案不一，仅供参考 如有雷同 纯</description>
    </item>
    
    <item>
      <title>监控架构 - 那些年我们举报的神马</title>
      <link>https://ap.tidb.cc/post/20170605-alertmanager-rules/</link>
      <pubDate>Mon, 05 Jun 2017 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20170605-alertmanager-rules/</guid>
      <description>创业 先帝创业未半而中道崩殂，今三分天下…… 因为没有及时收到告警导致整体垮掉而被领导责罚就是这个样子啦，所以小兵挂掉需要及时获知消息用于及时作</description>
    </item>
    
    <item>
      <title>监控架构 - 专业打小报告好多年</title>
      <link>https://ap.tidb.cc/post/20170604-alertmanager/</link>
      <pubDate>Sun, 04 Jun 2017 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20170604-alertmanager/</guid>
      <description>骑士 AlertManager 配置以及工具使用说明 AlertManager 配置文件模板 交叉 在 Prometheus 配置文件更新以下代码块(prometheus 2.0 +)，修改完成后重启后生效 Prometheus 配置文件地址 {{deploy_dir}}/conf/prometheus.yml 1 2</description>
    </item>
    
    <item>
      <title>监控架构 - Blackbox_exporter 主动探测端口服务状态</title>
      <link>https://ap.tidb.cc/post/20170603-blackbox_exporter/</link>
      <pubDate>Sat, 03 Jun 2017 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20170603-blackbox_exporter/</guid>
      <description>0x00 找个能监控组件端口是否存在的服务，并且可以将数据发送到 Prometheus ；blackbox export 是 Prometheus 家族一员，按照配置文件内容用于向目标主动探测 0x01 Deploy blackbox_exporter 是 Prometheus 官方</description>
    </item>
    
    <item>
      <title>监控架构 - Node_exporter 系统监控组件</title>
      <link>https://ap.tidb.cc/post/20170602-node_exporter/</link>
      <pubDate>Fri, 02 Jun 2017 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20170602-node_exporter/</guid>
      <description>0x00 起源 学习 node export 存的 0x01 Collector 通过 http://IP:9100/metrics 查看当前主机监控信息 Node export 通过Collector代码块收集系统性能指标 以下内容引用 Prometeus/Node_export README 每个操作系统上的 Collectors 都有不同的</description>
    </item>
    
    <item>
      <title>TiDB 监控架构：Prometheus &#43; Grafana</title>
      <link>https://ap.tidb.cc/post/20170601-prometheus-grafana/</link>
      <pubDate>Thu, 01 Jun 2017 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20170601-prometheus-grafana/</guid>
      <description>0x00 背影 通过本篇文档学习 TiDB 集群监控架构 (默认按照 TiDB-ansible 部署为准) 本篇文档按照 2019 年中 TiDB-ansible master branch 描述；区别在于是否有 pushgateway 组件 (端口 9091) 以下文档（百家饭+机器译</description>
    </item>
    
    <item>
      <title>是软体啦 - 思维导图三体之 xmind</title>
      <link>https://ap.tidb.cc/post/20100101-mindmap-xmind/</link>
      <pubDate>Fri, 01 Jan 2010 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20100101-mindmap-xmind/</guid>
      <description>0x00 云 业界大佬介绍一款高大上工具用于学习新的知识点 - mindmap / 思维导图。连续在各种场景用了几年，所以聊聊这玩意的看法（仅供参考） 这玩意当初查百度百科</description>
    </item>
    
    <item>
      <title>Linux - Megacli 软件配置硬 RAID</title>
      <link>https://ap.tidb.cc/post/20090103-megacli/</link>
      <pubDate>Sat, 03 Jan 2009 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20090103-megacli/</guid>
      <description>0x00 启示 服务器在远程机房托管，如果更改 raid level 需要通知机房运维人员下工单重做，时间周期不确定；听朋友介绍了该软件，通过软件对 LSI Raid 卡重新配置 Raid</description>
    </item>
    
    <item>
      <title>Linux - Tmux 多窗口敏捷工具</title>
      <link>https://ap.tidb.cc/post/20090102-tmux/</link>
      <pubDate>Fri, 02 Jan 2009 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20090102-tmux/</guid>
      <description>0x00 起源 screen 热键激活用的 ctrl + a，该热键同时是跳转到行首的快捷键； 试图寻找第二款类似 screen 的工具；找到了 tmux 这种 linux 平台办公利器，尤其是在没有扩展屏情况下</description>
    </item>
    
    <item>
      <title>Linux - Screen 进程守护</title>
      <link>https://ap.tidb.cc/post/20090101-screen/</link>
      <pubDate>Thu, 01 Jan 2009 00:00:00 +0800</pubDate>
      
      <guid>https://ap.tidb.cc/post/20090101-screen/</guid>
      <description>0x00 起源 百家饭内容：常用参数速查 主要用于 Linux 运行常驻命令守护，screen 创建窗口后运行程序，相比 nohub 命令使用上心安理得一些。 如果作为办公多窗口使</description>
    </item>
    
  </channel>
</rss>